/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gistrac.ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.net.URL;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author SecureUser
 */
public class LoadingDialog extends javax.swing.JDialog {

    /**
     * Creates new form LoadingDialog
     */
    public LoadingDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        int X = screen.width / 2 - getWidth() / 2;
        int Y = screen.height / 2 - getHeight() / 2;
        setBounds(X, Y, getWidth(), getHeight());
        try {
            URL imgURL = getClass().getResource("/com/gistrac/ui/resources/1427505203_Application-Map-64.png");
            ImageIcon imgc = new ImageIcon(imgURL);
            this.setIconImage(imgc.getImage());
        } catch (Exception e) {
            e.printStackTrace();
        }
        datasetForgroundGroup = new ButtonGroup();
        datasetForgroundGroup.add(radioWhite);
        datasetForgroundGroup.add(radioBlack);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datasetForgroundGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcc = new javax.swing.JColorChooser();
        butSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cmbNetwork = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cmbStartPeriod = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cmbEndPeriod = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        radioWhite = new javax.swing.JRadioButton();
        radioBlack = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Set Options");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Data Set Type:");

        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Location Data", "BTS", "GPRS Data", "CDR Data", "Polling Units" }));
        cmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTypeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Network:");

        butSave.setText("Save Information");
        butSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Select Marker Color:");

        cmbNetwork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MTN", "Airtel", "GLO", "Etisalat", "GPRS_File" }));
        cmbNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNetworkActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Start Period:");

        cmbStartPeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 AM", "2 AM", "3 AM", "4 AM", "5 AM", "6 AM", "7 AM", "8 AM", "9 AM", "10 AM", "11 AM", "12 AM", "1 PM", "2 PM", "3 PM", "4 PM", "5 PM", "6 PM", "7 PM", "8 PM", "9 PM", "10 PM", "11 PM", "12 PM" }));
        cmbStartPeriod.setSelectedIndex(5);
        cmbStartPeriod.setToolTipText("");
        cmbStartPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStartPeriodActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("End Period:");

        cmbEndPeriod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 AM", "2 AM", "3 AM", "4 AM", "5 AM", "6 AM", "7 AM", "8 AM", "9 AM", "10 AM", "11 AM", "12 AM", "1 PM", "2 PM", "3 PM", "4 PM", "5 PM", "6 PM", "7 PM", "8 PM", "9 PM", "10 PM", "11 PM", "12 PM" }));
        cmbEndPeriod.setSelectedIndex(6);
        cmbEndPeriod.setToolTipText("");
        cmbEndPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEndPeriodActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Data Set Name Label:");

        radioWhite.setText("White");

        radioBlack.setSelected(true);
        radioBlack.setText("Black");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(22, 22, 22)
                                .addComponent(cmbStartPeriod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbEndPeriod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioWhite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioBlack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbNetwork, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(butSave, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcc, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cmbNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbStartPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cmbEndPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(radioWhite)
                    .addComponent(radioBlack))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcc, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butSave)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed
        // TODO add your handling code here:
        //if(!chkDifference.isSelected()){
        if (checkPeriod()) {
            int showInternalConfirmDialog = JOptionPane.showConfirmDialog(this, "Are you sure that the network selected is correct?", "Ontrac Location Monitor", JOptionPane.YES_NO_OPTION);
            if (showInternalConfirmDialog == 0) {
                if (cmbType.getSelectedItem().toString().equalsIgnoreCase("Location Data")) {
                    setDataName(cmbNetwork.getSelectedItem() + " "+cmbStartPeriod.getSelectedItem().toString()+"-"+cmbEndPeriod.getSelectedItem().toString()+" LD");
                } else if (cmbType.getSelectedItem().toString().equalsIgnoreCase("Location Data")) {
                    setDataName(cmbNetwork.getSelectedItem() + " "+cmbStartPeriod.getSelectedItem().toString()+"-"+cmbEndPeriod.getSelectedItem().toString()+ " LD");
                } else if (cmbType.getSelectedItem().toString().equalsIgnoreCase("BTS")) {
                    setDataName(cmbNetwork.getSelectedItem() + " "+cmbStartPeriod.getSelectedItem().toString()+"-"+cmbEndPeriod.getSelectedItem().toString()+ " BTS");
                } else if (cmbType.getSelectedItem().toString().equalsIgnoreCase("GPRS Data")) {
                    setDataName(cmbNetwork.getSelectedItem() + " "+cmbStartPeriod.getSelectedItem().toString()+"-"+cmbEndPeriod.getSelectedItem().toString()+ " GPRS");
                } else if (cmbType.getSelectedItem().toString().equalsIgnoreCase("CDR Data")) {
                    setDataName(cmbNetwork.getSelectedItem() + " "+cmbStartPeriod.getSelectedItem().toString()+"-"+cmbEndPeriod.getSelectedItem().toString()+ " CDR");
                }
                setDataType(cmbType.getSelectedItem().toString());
                setColor(jcc.getColor());
                status = true;
                dispose();
            }
        }else{
            JOptionPane.showMessageDialog(this, "Period value incorrect, please check start period and end period", "OLM", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_butSaveActionPerformed
    boolean status = false;

    public boolean save() {
        return status;
    }

    public boolean checkPeriod() {
        boolean state = true;
        String sp = cmbStartPeriod.getSelectedItem().toString();
        String ep = cmbEndPeriod.getSelectedItem().toString();

        String[] spSplit = sp.split(" ");
        String[] epSplit = ep.split(" ");

        int spIntValue = Integer.parseInt(spSplit[0]);
        int epIntValue = Integer.parseInt(epSplit[0]);

        if (spSplit[1].equalsIgnoreCase("AM") && epSplit[1].equalsIgnoreCase("AM")) {
            if (spIntValue > epIntValue) {
                JOptionPane.showMessageDialog(this, "Period value incorrect, please check start period ", "OLM", JOptionPane.WARNING_MESSAGE);
                state = false;
            }
        } else if (spSplit[1].equalsIgnoreCase("PM") && epSplit[1].equalsIgnoreCase("PM")) {
            if (spIntValue > epIntValue) {
                JOptionPane.showMessageDialog(this, "Period value incorrect, please check start period ", "OLM", JOptionPane.WARNING_MESSAGE);
                state = false;
            }
        } else if (spSplit[1].equalsIgnoreCase("PM") && epSplit[1].equalsIgnoreCase("AM")) {
            if (spIntValue > epIntValue) {
                JOptionPane.showMessageDialog(this, "Period value incorrect, please check start period ", "OLM", JOptionPane.WARNING_MESSAGE);
                state = false;
            }
        }
        return state;
    }
    private void cmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTypeActionPerformed
        // TODO add your handling code here:
        if (cmbType.getSelectedItem().toString().equalsIgnoreCase("GPRS Data")) {
            //chkDifference.setEnabled(true);
            cmbNetwork.setSelectedIndex(4);
        } else {
            //chkDifference.setEnabled(false);
        }
    }//GEN-LAST:event_cmbTypeActionPerformed

    private void cmbEndPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEndPeriodActionPerformed
        // TODO add your handling code here:
       checkPeriod();
    }//GEN-LAST:event_cmbEndPeriodActionPerformed

    private void cmbStartPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStartPeriodActionPerformed
        // TODO add your handling code here:
        checkPeriod();
    }//GEN-LAST:event_cmbStartPeriodActionPerformed

    private void cmbNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNetworkActionPerformed
        // TODO add your handling code here:
        if(cmbNetwork.getSelectedItem().toString().equalsIgnoreCase("MTN")){
            jcc.setColor(255, 255, 0);
        }else if(cmbNetwork.getSelectedItem().toString().equalsIgnoreCase("Airtel")){
            jcc.setColor(255, 0, 0);
        }else if(cmbNetwork.getSelectedItem().toString().equalsIgnoreCase("Glo")){
            jcc.setColor(0, 255, 0);
        }else if(cmbNetwork.getSelectedItem().toString().equalsIgnoreCase("Etisalat")){
            jcc.setColor(0, 0, 255);
            radioWhite.setSelected(false);
            radioBlack.setSelected(true);
        }
    }//GEN-LAST:event_cmbNetworkActionPerformed

    String name;
    String type;
    Color color;
    File additionalDataSet;
    Color additionalColor;

    public boolean getAdditionalData() {
        return false;//chkDifference.isSelected();
    }

    public void setDataName(String name) {
        this.name = name;
    }

    public String getDataName() {
        return name;
    }

    public void setDataType(String type) {
        this.type = type;
    }

    public String getDataType() {
        return type;
    }

    public void setColor(Color color) {
        this.color = color;
    }

    public Color getColor() {
        return color;
    }

    public void setAdditionalDataSet(File additionalDataSet) {
        this.additionalDataSet = additionalDataSet;
    }

    public File getAdditionalDataSet() {
        return additionalDataSet;
    }

    public void setDataSetColor(Color additionalColor) {
        this.additionalColor = additionalColor;
    }

    public Color getDataSetColor() {
        if(radioBlack.isSelected()){
           additionalColor = Color.BLACK;
        }else{
            additionalColor = Color.WHITE; 
        }
        return additionalColor;
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butSave;
    private javax.swing.JComboBox cmbEndPeriod;
    private javax.swing.JComboBox cmbNetwork;
    private javax.swing.JComboBox cmbStartPeriod;
    private javax.swing.JComboBox cmbType;
    private javax.swing.ButtonGroup datasetForgroundGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JColorChooser jcc;
    private javax.swing.JRadioButton radioBlack;
    private javax.swing.JRadioButton radioWhite;
    // End of variables declaration//GEN-END:variables
}
